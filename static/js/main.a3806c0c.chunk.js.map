{"version":3,"sources":["img/logo.png","Header.js","Aside.js","Main.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","searchQuery","className","src","logo","alt","onSubmit","this","onChange","type","placeholder","React","Component","Aside","recipes","handleClick","loading","recipeItem","length","map","recipe","onClick","recipe_id","key","image_url","title","color","height","width","timeout","Main","recipeClicked","loadingDetails","ingredients","ingredient","recipeDetails","href","source_url","rel","Footer","App","loadingRecipes","id","a","fetch","response","json","data","slice","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3806c0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a0338ac0.png\";","import React from \"react\";\r\n\r\nimport logo from \"./img/logo.png\";\r\n\r\nclass Header extends React.Component {\r\n  state = { query: \"\" };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.searchQuery(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <img className=\"header__image\" src={logo} alt=\"Logo\" />\r\n        <form onSubmit={this.handleSubmit} className=\"header__form\">\r\n          <input\r\n            onChange={this.handleChange}\r\n            className=\"header__input\"\r\n            type=\"text\"\r\n            placeholder=\"Search Recipes\"\r\n            value={this.state.query}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Aside = ({ recipes, handleClick, loading }) => {\r\n  const recipeItem = recipes.length\r\n    ? recipes.map(recipe => {\r\n        return (\r\n          <div\r\n            onClick={() => handleClick(recipe.recipe_id)}\r\n            className=\"aside__recipe\"\r\n            key={recipe.recipe_id}\r\n          >\r\n            <img\r\n              className=\"aside__recipe--image\"\r\n              src={recipe.image_url}\r\n              alt=\"\"\r\n            />\r\n            <p className=\"aside__recipe--title\">{recipe.title}</p>\r\n          </div>\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"aside\">\r\n      {loading ? (\r\n        <div className=\"aside__loader\">\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={0}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {recipeItem}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Main = ({ recipeClicked, loadingDetails }) => {\r\n  let recipe = recipeClicked.recipe;\r\n\r\n  const ingredients = recipe\r\n    ? recipe.ingredients.map(ingredient => {\r\n        return <p className=\"main__ingredients--text\">{ingredient}</p>;\r\n      })\r\n    : null;\r\n\r\n  const recipeDetails = recipe ? (\r\n    <div className=\"main__recipe\">\r\n      <img className=\"main__image\" src={recipe.image_url} alt=\"\" />\r\n      <h1 className=\"main__title\">{recipe.title}</h1>\r\n      <a\r\n        className=\"main__link\"\r\n        href={recipe.source_url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Recipe here\r\n      </a>\r\n      <h3>Ingredients</h3>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {loadingDetails ? (\r\n        <div className=\"aside__loader\">\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={0}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {recipeDetails}\r\n\r\n      <div className=\"main__ingredients\">{ingredients}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className=\"footer__author\">Â© by Carlo Anselmi</p>\r\n      <p className=\"footer__info\">Powered by Food2Fork</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport \"./App\";\n\nimport Header from \"./Header\";\nimport Aside from \"./Aside\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nclass App extends React.Component {\n  state = {\n    recipes: [],\n    recipeClicked: [],\n    loadingRecipes: false,\n    loadingDetails: false\n  };\n\n  handleClick = async id => {\n    this.setState({ recipeClicked: [], loadingDetails: true });\n    const key = \"5fee6f712b52ad6132afa064267aa860\";\n    let response = await fetch(\n      `https://www.food2fork.com/api/get?key=${key}&rId=${id}`\n    );\n    let recipeClicked = await response.json();\n    this.setState({ recipeClicked, loadingDetails: false });\n  };\n\n  searchQuery = async query => {\n    this.setState({ loadingRecipes: true });\n    const key = \"5fee6f712b52ad6132afa064267aa860\";\n    let response = await fetch(\n      `https://www.food2fork.com/api/search?key=${key}&q=${query}&page=1`\n    );\n    let data = await response.json();\n    let recipes = data.recipes.slice(0, 10);\n    console.log(recipes);\n    this.setState({ recipes, loadingRecipes: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header searchQuery={this.searchQuery} />\n        <Aside\n          recipes={this.state.recipes}\n          handleClick={this.handleClick}\n          loading={this.state.loadingRecipes}\n        />\n        <Main\n          recipeClicked={this.state.recipeClicked}\n          loadingDetails={this.state.loadingDetails}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}